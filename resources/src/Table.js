import {DataContext, TranslationStatus} from "./Data";
import {useContext} from "react";

function JumpList() {
    const data = useContext(DataContext);

    const listItems = Object.keys(data.entries).map((value, index, array) => {
        if (index < array.length - 1)
            return <a href={'#' + value} className="hover:text-blue-500">{value} - </a>
        else
            return <a href={'#' + value} className="hover:text-blue-500">{value}</a>
    });

    return <div className="my-10">
        <h3 className="text-2xl p-5">Quick Jump List</h3>
        {listItems}
    </div>
}

function DataTable() {
    return <table className="text-center border-opacity-50 mx-auto">
        <DataTableHeader/>
        <DataTableBody/>
    </table>
}

function DataTableHeader() {
    const data = useContext(DataContext);

    const languageRows = data.languages
        .map((lang) => <th className="px-2 py-4 border border-gray-200">{lang}</th>);

    return <thead className="sticky top-0 bg-gradient-to-b from-white via-white">
    <tr>
        <th className="px-2 py-4 border border-gray-200">page</th>
        {languageRows}
    </tr>
    </thead>
}

function DataTableBody() {
    const data = useContext(DataContext);

    const osSections = Object.keys(data.entries).map((os) =>
        <>
            <DataTableOSHeader os={os}/>
            <DataTableOSPages os={os}/>
        </>
    );

    return <tbody className="text-sm">{osSections}</tbody>
}

function DataTableOSHeader(props) {
    const data = useContext(DataContext);
    const osProgress = data.entries[props.os].progress;

    const percentages = data.languages
        .map((lang) => <td className="px-1 py-2">{osProgress[lang]}%</td>);

    return <tr className="border border-gray-200 bg-indigo-300 p-4">
        <th className="text-base px-1 py-2" id={props.os}>{props.os}</th>
        {percentages}
    </tr>
}

function DataTableOSPages(props) {
    const data = useContext(DataContext);
    const osPages = data.entries[props.os].pages;

    const pages = Object.keys(osPages)
        .map((page) => <DataTableOSPageRow os={props.os} page={page}/>);

    return <>{pages}</>;
}

function DataTableOSPageRow(props) {
    const data = useContext(DataContext);
    const os = props.os;
    const pageName = props.page;
    const pageData = data.entries[os].pages[pageName];

    function handleClick(action, language) {
        const win = window.open(getGitHubPageUrl(action, os, pageName, language));
        win.focus();
    }

    const cells = data.languages.map((lang) => {
        if (lang in pageData.status) {
            const status = pageData.status[lang];
            switch (status) {
                case TranslationStatus.Translated:
                    return <td className="bg-green-200 cursor-pointer"
                               onClick={() => handleClick(GithubFileAction.view, lang)}>✔</td>
                case TranslationStatus.Outdated:
                    return <td className="bg-yellow-200 cursor-pointer"
                               onClick={() => handleClick(GithubFileAction.view, lang)}>⚠</td>
                default:
                    return <td>?</td>
            }
        } else {
            return <td className="bg-red-200 cursor-pointer"
                       onClick={() => handleClick(GithubFileAction.create, lang)}>✖</td>
        }
    });

    return <tr className="border border-gray-200">
        <td className="text-left text-base p-1">{pageName}</td>
        {cells}
    </tr>
}

const GithubFileAction = {
    create: 'create',
    view: 'view'
}

function getGitHubPageUrl(action, os, page, language) {
    const languageSuffix = language === 'en' ? '' : '.' + language

    const baseUrl = "https://github.com/tldr-pages/tldr";
    const filePath = `/master/pages${languageSuffix}/${os}/${page}.md`

    if (action === GithubFileAction.create) {
        return baseUrl + "/new" + filePath + `?filename=${page}.md`;
    } else if (action === GithubFileAction.view) {
        return baseUrl + "/blob" + filePath;
    } else {
        throw new Error('Unknown GitHubFileAction: ' + action);
    }
}

function Footer() {
    const data = useContext(DataContext);

    return (
        <div className="my-6 text-center text-gray-700">
            Thanks for using this site •
            Generated by <a href="https://github.com/LukWebsForge/TldrProgress">tldr-translation-progress</a> •
            Last updated {data.last_update}
        </div>
    )
}

export {JumpList, DataTable, Footer};
